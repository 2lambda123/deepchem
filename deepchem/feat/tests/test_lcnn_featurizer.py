import numpy as np
from deepchem.feat.material_featurizers.lcnn_featurizer import LCNNFeaturizer

template = """#primitive strucutre
2.81852800e+00  0.00000000e+00  0.00000000e+00 T
-1.40926400e+00  2.44091700e+00  0.00000000e+00 T
0.00000000e+00  0.00000000e+00  2.55082550e+01 F
1 1
1 0 2
6
0.666670000000  0.333330000000  0.090220999986 S1
0.333330000000  0.666670000000  0.180439359180 S1
0.000000000000  0.000000000000  0.270657718374 S1
0.666670000000  0.333330000000  0.360876077568 S1
0.333330000000  0.666670000000  0.451094436762 S1
0.000000000000  0.000000000000  0.496569911270 A1
"""


structure = """-4.22779200e+00 -2.44091700e+00  0.00000000e+00
 2.81852800e+00 -4.88183400e+00  0.00000000e+00
 0.00000000e+00  0.00000000e+00  2.31755900e+01
24
 0.333330000000  0.500000000000  0.099298999982 S1
 0.000000000000  0.500000000000  0.198598000008 S1
 0.166670000000  0.250000000000  0.297897000033 S1
 0.333330000000  0.500000000000  0.397196000059 S1
 0.000000000000  0.500000000000  0.496495000084 S1
 0.333330000000  0.000000000000  0.099298999982 S1
 0.000000000000  0.000000000000  0.198598000008 S1
 0.166670000000  0.750000000000  0.297897000033 S1
 0.333330000000  0.000000000000  0.397196000059 S1
 0.000000000000  0.000000000000  0.496495000084 S1
 0.833330000000  0.250000000000  0.099298999982 S1
 0.500000000000  0.250000000000  0.198598000008 S1
 0.666670000000  0.000000000000  0.297897000033 S1
 0.833330000000  0.250000000000  0.397196000059 S1
 0.500000000000  0.250000000000  0.496495000084 S1
 0.833330000000  0.750000000000  0.099298999982 S1
 0.500000000000  0.750000000000  0.198598000008 S1
 0.666670000000  0.500000000000  0.297897000033 S1
 0.833330000000  0.750000000000  0.397196000059 S1
 0.500000000000  0.750000000000  0.496495000084 S1
 0.666670000000  0.500000000000  0.546547663253 A1 0
 0.666670000000  0.000000000000  0.546547663253 A1 0
 0.166670000000  0.750000000000  0.546547663253 A1 2
 0.166670000000  0.250000000000  0.546547663253 A1 1
"""
check1 = np.array([[0., 1., 0.],
                   [0., 1., 0.],
                   [0., 0., 1.],
                   [1., 0., 0.]])

check2 = np.array([[[[0, 2, 3, 1, 1, 2, 3, 1, 0, 2, 3, 1, 0, 1, 2, 0, 0, 3, 1],
                    [0, 3, 2, 1, 1, 3, 2, 1, 0, 3, 2, 1, 0, 1, 3, 0, 0, 2, 1],
                    [0, 1, 2, 0, 1, 2, 0, 3, 1, 0, 3, 1, 2, 0, 3, 1, 3, 1, 2],
                    [0, 1, 3, 0, 1, 3, 0, 2, 1, 0, 2, 1, 3, 0, 2, 1, 2, 1, 3],
                    [0, 3, 0, 1, 0, 1, 3, 2, 1, 2, 1, 0, 2, 1, 0, 1, 3, 2, 3],
                    [0, 2, 0, 1, 0, 1, 2, 3, 1, 3, 1, 0, 3, 1, 0, 1, 2, 3, 2]],

                    [[1, 3, 2, 0, 0, 3, 2, 0, 1, 3, 2, 0, 1, 0, 3, 1, 1, 2, 0],
                    [1, 2, 3, 0, 0, 2, 3, 0, 1, 2, 3, 0, 1, 0, 2, 1, 1, 3, 0],
                    [1, 0, 3, 1, 0, 3, 1, 2, 0, 1, 2, 0, 3, 1, 2, 0, 2, 0, 3],
                    [1, 0, 2, 1, 0, 2, 1, 3, 0, 1, 3, 0, 2, 1, 3, 0, 3, 0, 2],
                    [1, 2, 1, 0, 1, 0, 2, 3, 0, 3, 0, 1, 3, 0, 1, 0, 2, 3, 2],
                    [1, 3, 1, 0, 1, 0, 3, 2, 0, 2, 0, 1, 2, 0, 1, 0, 3, 2, 3]],

                    [[2, 1, 0, 3, 3, 1, 0, 3, 2, 1, 0, 3, 2, 3, 1, 2, 2, 0, 3],
                    [2, 0, 1, 3, 3, 0, 1, 3, 2, 0, 1, 3, 2, 3, 0, 2, 2, 1, 3],
                    [2, 3, 1, 2, 3, 1, 2, 0, 3, 2, 0, 3, 1, 2, 0, 3, 0, 3, 1],
                    [2, 3, 0, 2, 3, 0, 2, 1, 3, 2, 1, 3, 0, 2, 1, 3, 1, 3, 0],
                    [2, 0, 2, 3, 2, 3, 0, 1, 3, 1, 3, 2, 1, 3, 2, 3, 0, 1, 0],
                    [2, 1, 2, 3, 2, 3, 1, 0, 3, 0, 3, 2, 0, 3, 2, 3, 1, 0, 1]],

                    [[3, 0, 1, 2, 2, 0, 1, 2, 3, 0, 1, 2, 3, 2, 0, 3, 3, 1, 2],
                    [3, 1, 0, 2, 2, 1, 0, 2, 3, 1, 0, 2, 3, 2, 1, 3, 3, 0, 2],
                    [3, 2, 0, 3, 2, 0, 3, 1, 2, 3, 1, 2, 0, 3, 1, 2, 1, 2, 0],
                    [3, 2, 1, 3, 2, 1, 3, 0, 2, 3, 0, 2, 1, 3, 0, 2, 0, 2, 1],
                    [3, 1, 3, 2, 3, 2, 1, 0, 2, 0, 2, 3, 0, 2, 3, 2, 1, 0, 1],
                    [3, 0, 3, 2, 3, 2, 0, 1, 2, 1, 2, 3, 1, 2, 3, 2, 0, 1, 0]]]])


def test_LCNNFeaturizer():
    featuriser = LCNNFeaturizer(np.around(6.00), template)
    data = featuriser._featurize(structure)
    assert np.all(data['X_Sites'] == check1)
    assert np.all(data['X_NSs'] == check2)
    assert data['X_Sites'].shape == (4, 3)
    assert data['X_NSs'].shape == (1, 4, 6, 19)
